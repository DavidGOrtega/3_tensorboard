name: train-my-model

on: [push]

jobs:
  # deploy-azure-gpu:
  #   runs-on: [ubuntu-latest]
  #   container: docker://dvcorg/cml-py3-cloud-runner:latest

  #   steps:
  #     - name: deploy
  #       shell: bash
  #       env:
  #         repo_token: ${{ secrets.REPO_TOKEN }} 
  #         AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  #         AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  #         AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       run: |
  #         echo "Deploying..."

  #         RUNNER_LABELS="cml,azure"
  #         RUNNER_REPO="https://github.com/DavidGOrtega/3_tensorboard"
  #         MACHINE="cml$(date +%s)"

  #         docker-machine create \
  #           --driver azure \
  #           --azure-client-id $AZURE_CLIENT_ID \
  #           --azure-client-secret $AZURE_CLIENT_SECRET \
  #           --azure-subscription-id $AZURE_SUBSCRIPTION_ID \
  #           --azure-location "eastus" \
  #           --azure-resource-group $MACHINE \
  #           --azure-size "Standard_NC6" \
  #           --azure-image Canonical:UbuntuServer:18.04-LTS:latest \
  #           $MACHINE

  #         eval "$(docker-machine env --shell sh $MACHINE)"

  #         (
  #         docker-machine ssh $MACHINE "sudo mkdir -p /docker_machine && sudo chmod 777 /docker_machine" && \
  #         docker-machine scp -r -q ~/.docker/machine/ $MACHINE:/docker_machine && \

  #         docker-machine ssh $MACHINE "sudo apt update && sudo apt install -y ubuntu-drivers-common && sudo ubuntu-drivers autoinstall" && \

  #         docker-machine restart $MACHINE && \
  #         eval "$(docker-machine env --shell sh $MACHINE)" && \

  #         docker-machine ssh $MACHINE "curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - && curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu18.04/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list && sudo apt update && sudo apt install -y nvidia-container-toolkit && sudo systemctl restart docker" && \

  #         docker run --name runner --gpus all -d \
  #           -v /docker_machine/machine:/root/.docker/machine \
  #           -e DOCKER_MACHINE=$MACHINE \
  #           -e repo_token=$repo_token \
  #           -e RUNNER_LABELS=$RUNNER_LABELS \
  #           -e RUNNER_REPO=$RUNNER_REPO \
  #           -e RUNNER_IDLE_TIMEOUT=120 \
  #           dvcorg/cml-gpu-py3-cloud-runner:latest && \

  #         sleep 20 && echo "Deployed $MACHINE"
  #         ) || (docker-machine rm -f $MACHINE && exit 1)

  # ml-azure-gpu:
  #   needs: deploy-azure
  #   runs-on: [self-hosted,azure]

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: cml_run
  #       env:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }} 
  #       run: |
  #         echo "Training..."
  #         echo 'Hi from azure!' >> report.md
  #         nvidia-smi >> report.md
  #         cml-send-comment report.md

  #         pip3 install -r requirements.txt
  #         python train.py
          
  #         echo "Trained!"


  deploy-azure:
    runs-on: [ubuntu-latest]
    container: docker://davidgortega/cml-runner:latest

    steps:
      - name: deploy
        shell: bash
        env:
          repo_token: ${{ secrets.REPO_TOKEN }} 
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "Deploying..."

          RUNNER_LABELS="azure"
          RUNNER_REPO="https://github.com/${GITHUB_REPOSITORY}"
          MACHINE="cml$(date +%s)"

          docker-machine create \
            --driver azure \
            --azure-client-id $AZURE_CLIENT_ID \
            --azure-client-secret $AZURE_CLIENT_SECRET \
            --azure-subscription-id $AZURE_SUBSCRIPTION_ID \
            --azure-size "Standard_NC6" \
            --azure-image Canonical:UbuntuServer:18.04-LTS:latest \
            --azure-location "eastus" \
            --azure-resource-group $MACHINE \
            $MACHINE

          eval "$(docker-machine env --shell sh $MACHINE)" &&

          docker run --name runner \
            -v /docker_machine/machine:/root/.docker/machine \
            -e DOCKER_MACHINE=$MACHINE \
            -e repo_token=$repo_token \
            -e RUNNER_LABELS=$RUNNER_LABELS \
            -e RUNNER_REPO=$RUNNER_REPO \
            davidgortega/cml-runner:latest &&

          docker-machine rm -f $MACHINE

  wait-azure:
    needs: deploy-azure

    steps:
      - name: deploy
        run: |
          echo 'waiting deploy to finish...' 

  ml-azure:
    needs: wait-azure
    runs-on: [self-hosted,azure]

    steps:
      - uses: actions/checkout@v2

      - name: cml_run
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          echo "Training..."
          echo 'Hi from azure!' >> report.md
          echo "Trained!"


  # deploy-aws:
  #   runs-on: [ubuntu-latest]
  #   container: docker://dvcorg/cml-cloud-runner:latest

  #   steps:
  #     - name: deploy
  #       shell: bash
  #       env:
  #         repo_token: ${{ secrets.REPO_TOKEN }} 
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       run: |
  #         echo "Deploying..."

  #         RUNNER_LABELS="cml,aws"
  #         RUNNER_REPO="https://github.com/DavidGOrtega/3_tensorboard"
  #         MACHINE="cml$(date +%s)"

  #         docker-machine create \
  #           --driver amazonec2 \
  #           --amazonec2-instance-type g4dn.xlarge \
  #           --amazonec2-vpc-id vpc-06bc773d85a0a04f7 \
  #           --amazonec2-ssh-user ubuntu \
  #           --amazonec2-ami ami-085925f297f89fce1 \
  #           $MACHINE

  #         eval "$(docker-machine env --shell sh $MACHINE)"

  #         (
  #         docker-machine ssh $MACHINE "sudo mkdir -p /docker_machine && sudo chmod 777 /docker_machine" && \
  #         docker-machine scp -r -q ~/.docker/machine/ $MACHINE:/docker_machine && \

  #         docker run --name runner --gpus all -d \
  #           -v /docker_machine/machine:/root/.docker/machine \
  #           -e DOCKER_MACHINE=$MACHINE \
  #           -e repo_token=$repo_token \
  #           -e RUNNER_LABELS=$RUNNER_LABELS \
  #           -e RUNNER_REPO=$RUNNER_REPO \
  #           -e RUNNER_IDLE_TIMEOUT=120 \
  #           dvcorg/cml-cloud-runner:latest && \

  #         sleep 20 && echo "Deployed $MACHINE"
  #         ) || (docker-machine rm -f $MACHINE && exit 1)

  # ml-aws:
  #   needs: deploy-aws
  #   runs-on: [self-hosted,aws]

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: cml_run
  #       env:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }} 
  #       run: |
  #         echo "Training..."
  #         echo 'Hi from aws!' >> report.md
  #         cml-send-comment report.md
  #         echo "Trained!"


  # deploy-gce:
  #   runs-on: [ubuntu-latest]
  #   container: docker://dvcorg/cml-cloud-runner:latest

  #   steps:
  #     - name: deploy
  #       shell: bash
  #       env:
  #         repo_token: ${{ secrets.REPO_TOKEN }} 
  #         GOOGLE_APPLICATION_CREDENTIALS_DATA: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}
  #       run: |
  #         echo "Deploying..."

  #         echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}' > gce-credentials.json
  #         export GOOGLE_APPLICATION_CREDENTIALS='gce-credentials.json'

  #         RUNNER_LABELS="cml,gce"
  #         RUNNER_REPO="https://github.com/DavidGOrtega/3_tensorboard"
  #         MACHINE="cml$(date +%s)"

  #         docker-machine create --driver google \
  #           --google-machine-type "f1-micro" \
  #           --google-project "cml-project-279709" \
  #           --google-machine-image "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts" \
  #           $MACHINE

  #         eval "$(docker-machine env --shell sh $MACHINE)"

  #         (
  #         docker-machine ssh $MACHINE "sudo mkdir -p /docker_machine && sudo chmod 777 /docker_machine" && \
  #         docker-machine scp -r -q ~/.docker/machine/ $MACHINE:/docker_machine && \

  #         docker-machine scp -q gce-credentials.json $MACHINE:/docker_machine/gce-credentials.json && \

  #         docker run --name runner -d \
  #           -v /docker_machine/machine:/root/.docker/machine \
  #           -e DOCKER_MACHINE=$MACHINE \
  #           -e repo_token=$repo_token \
  #           -e RUNNER_LABELS=$RUNNER_LABELS \
  #           -e RUNNER_REPO=$RUNNER_REPO \
  #           -e RUNNER_IDLE_TIMEOUT=120 \
  #           -v /docker_machine/gce-credentials.json:/gce-credentials.json \
  #           -e GOOGLE_APPLICATION_CREDENTIALS='/gce-credentials.json' \
  #           dvcorg/cml-cloud-runner:latest && \

  #         sleep 20 && echo "Deployed $MACHINE"
  #         ) || (docker-machine rm -f $MACHINE && exit 1)

  # ml-gce:
  #   needs: deploy-gce
  #   runs-on: [self-hosted,gce]

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: cml_run
  #       env:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }} 
  #       run: |
  #         echo "Training..."
  #         echo 'Hi from Google Cloud!' >> report.md
  #         cml-send-comment report.md
  #         echo "Trained!"
          