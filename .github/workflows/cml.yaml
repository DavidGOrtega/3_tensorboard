name: train-my-model

on: [push]

jobs:
  deploy:
    runs-on: [ubuntu-latest]
    container: docker://dvcorg/cml-cloud-runner:latest

    steps:
      - name: deploy
        env:
          repo_token: ${{ secrets.REPO_TOKEN }} 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS_DATA: $${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}
        run: |
          echo "Deploying..."
          
          GCPATH=$HOME/gce-credentials.json
          echo "$GOOGLE_APPLICATION_CREDENTIALS_DATA" > (echo "$GCPATH")
          export GOOGLE_APPLICATION_CREDENTIALS=$GCPATH

          echo $GOOGLE_APPLICATION_CREDENTIALS_DATA
          echo $GOOGLE_APPLICATION_CREDENTIALS
          cat $GCPATH

          MACHINE="CML-$(openssl rand -hex 12)"
          docker-machine create --driver google \
            --google-machine-type "f1-micro" \
            --google-project cml-project-279709 \
              $MACHINE

          eval "$(docker-machine env --shell sh $MACHINE)"

          ( 
          docker-machine ssh $MACHINE "sudo mkdir -p /docker_machine && sudo chmod 777 /docker_machine" && \
          docker-machine scp -r -q ~/.docker/machine/ $MACHINE:/docker_machine && \

          docker run --name runner -d \
            -v /docker_machine/machine:/root/.docker/machine \
            -e RUNNER_IDLE_TIMEOUT=120 \
            -e DOCKER_MACHINE=${MACHINE} \
            -e RUNNER_LABELS=gpu \
            -e repo_token=$repo_token \
            -e RUNNER_REPO=https://github.com/DavidGOrtega/3_tensorboard \
            dvcorg/cml-cloud-runner:latest && \

          sleep 20 && echo "Deployed $MACHINE"
          ) || (echo y | docker-machine rm $MACHINE && exit 1)

  ml:
    needs: deploy
    runs-on: [self-hosted,gpu]

    steps:
      - uses: actions/checkout@v2

      - name: dvc_cml_run
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          echo "Training..."
          echo 'Hello world!' >> report.md
          cml-send-comment report.md
          echo "Trained!"
          